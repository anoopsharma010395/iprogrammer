[{"I:\\iprogrammer\\src\\index.js":"1","I:\\iprogrammer\\src\\App.js":"2","I:\\iprogrammer\\src\\ImageComponent.js":"3","I:\\iprogrammer\\src\\TableComponent.js":"4"},{"size":178,"mtime":1608484729623,"results":"5","hashOfConfig":"6"},{"size":291,"mtime":1608484823271,"results":"7","hashOfConfig":"6"},{"size":2386,"mtime":1611072799864,"results":"8","hashOfConfig":"6"},{"size":1195,"mtime":1611073545395,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1k0wpdq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"12"},"I:\\iprogrammer\\src\\index.js",[],["22","23"],"I:\\iprogrammer\\src\\App.js",["24"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ImageComponent from './ImageComponent.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Test app\n      </header>\n      <ImageComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","I:\\iprogrammer\\src\\ImageComponent.js",["25","26"],"import React from 'react';\r\nimport axios from '../node_modules/axios';\r\nimport TableComponent from './TableComponent.js'\r\n\r\nclass ImageComponent extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={imageData:\"\",propValue:new Map,monthValue:\"\"}\r\n    }\r\n    handleCompareRemove(event){\r\n        \r\n        let selectedId = event.target.id.split(\"_\")[0];\r\n        let newProp=this.state.propValue;\r\n        if(this.state.propValue.get(selectedId))\r\n        {\r\n            newProp.delete(selectedId);\r\n            document.getElementById(event.target.id).innerHTML = \"Compare\";\r\n        }\r\n        else{\r\n            newProp.set(selectedId,this.state.imageData[selectedId])\r\n            document.getElementById(event.target.id).innerHTML = \"Remove\";\r\n        }\r\n        this.setState({propValue:newProp});\r\n    }\r\n    componentDidMount(){\r\n        this.fetchResponse();\r\n    }\r\n    async fetchResponse(){\r\n        let response = await axios.get(\"https://jsonplaceholder.typicode.com/photos\");\r\n        //console.log(response.data);\r\n        var result = response.data.slice(0,3).reduce(function(map, obj) {\r\n            map[obj.id] = obj;\r\n            return map;\r\n        }, {});\r\n        this.setState({imageData:result});\r\n        console.log(this.state.imageData);\r\n    }\r\n\r\n    render(){\r\n        let listOfGrids=\"\";\r\n        if(this.state.imageData){\r\n             listOfGrids = Object.values(this.state.imageData).map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"boxes\">\r\n                        <div><img className=\"image-div\" src={item.url} alt=\"image\"/></div>\r\n                        <div>Title: {item.title}</div>\r\n                        <div>ID: {item.id}</div>\r\n                        <div>URL: {item.url.toString()}</div>\r\n                        <div>\r\n                            <button id={item.id + \"_compare\"} className=\"compare\" $index={index} onClick={(event) => this.handleCompareRemove(event)}>Compare</button> \r\n                        </div>\r\n                    </div>\r\n                )\r\n              });\r\n        }\r\n        return(\r\n            <div><div id='enclosingDiv' className=\"grid-3boxes\" >\r\n            {listOfGrids}\r\n        </div>\r\n        <TableComponent propValue={this.state.propValue}/></div>\r\n        \r\n    )\r\n}\r\n}\r\nexport default ImageComponent;","I:\\iprogrammer\\src\\TableComponent.js",["27","28"],"import React from 'react';\r\n\r\n\r\nclass TableComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let listOfGrids=\"\";\r\n        if(this.props.propValue){\r\n             listOfGrids = Array.from(this.props.propValue.values()).map((item, index) => {\r\n                return (\r\n                    <tr>\r\n                        <td>Photo {index +1}</td>\r\n                        <td>{item.id}</td>\r\n                        <td><img className=\"image-div table\" src={item.thumbnailUrl} alt=\"image\"/></td>\r\n                        <td>{item.title}</td>\r\n                    </tr>\r\n                )\r\n              });\r\n        }\r\n\r\n        return (\r\n            <div  >\r\n                <table>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Photo</th>\r\n                        <th>Id</th>\r\n                        <th>URL</th>\r\n                        <th>Title</th>\r\n                    </tr>\r\n                    {listOfGrids}\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default TableComponent;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":9,"column":44,"nodeType":"39","messageId":"40","endLine":9,"endColumn":51,"fix":"41"},{"ruleId":"42","severity":1,"message":"43","line":46,"column":30,"nodeType":"44","endLine":46,"endColumn":85},{"ruleId":"45","severity":1,"message":"46","line":6,"column":5,"nodeType":"47","messageId":"48","endLine":8,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":20,"column":29,"nodeType":"44","endLine":20,"endColumn":99},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"51","text":"52"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[275,275],"()"]